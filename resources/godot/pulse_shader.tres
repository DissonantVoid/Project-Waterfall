[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec2 normalized_start_point;
uniform float start_radius;
uniform float end_radius;

void fragment()
{
	float dist = distance(normalized_start_point, SCREEN_UV);
	vec2 new_uv = SCREEN_UV;
	if (dist <= end_radius && dist >= start_radius)
	{
		vec2 dir = SCREEN_UV - normalized_start_point;
		new_uv -= dir * dist * 1.4;
	}
	
	COLOR = texture(SCREEN_TEXTURE, new_uv);
}"

[resource]
shader = SubResource( 1 )
shader_param/normalized_start_point = Vector2( 0.5, 0.5 )
shader_param/start_radius = 0.0
shader_param/end_radius = 0.0
