[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=35]
code = "shader_type canvas_item;

uniform float weight : hint_range(0.0, 1.0) = 0;

float map(float value, float min_, float max_, float new_min, float new_max)
{
	return (value - min_) * (new_max - new_min) / (max_ - min_) + new_min;
}

void fragment()
{
	// TODO: this is the only workaround I can think of
	//       when using weight instead of the image filling at 1
	//       it fills at 0.93. no idea why. tried marking the value as highp
	//       but that does nothing
	float final_weight = map(weight, 0, 1, 0, 0.93);
	
	COLOR = texture(TEXTURE, UV);
	COLOR.a *= step(UV.x, final_weight);
}"

[resource]
shader = SubResource( 35 )
shader_param/weight = 0.0
